// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaringCompare.Data;

#nullable disable

namespace TaringCompare.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaringCompare.Models.Taring", b =>
                {
                    b.Property<int>("TaringID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaringID"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DistanceX")
                        .HasColumnType("int");

                    b.Property<int>("DistanceY")
                        .HasColumnType("int");

                    b.Property<string>("HtmlPage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LevelMax")
                        .HasColumnType("int");

                    b.Property<int>("LevelMin")
                        .HasColumnType("int");

                    b.Property<int>("LitersMax")
                        .HasColumnType("int");

                    b.Property<int>("SensorLength")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaringID");

                    b.ToTable("Tarings");
                });

            modelBuilder.Entity("TaringCompare.Models.TaringItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<float>("Delta")
                        .HasColumnType("real");

                    b.Property<float>("LitersLevel")
                        .HasColumnType("real");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<int>("RawLevel")
                        .HasColumnType("int");

                    b.Property<long>("TaringID")
                        .HasColumnType("bigint");

                    b.Property<int?>("TaringID1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaringID1");

                    b.ToTable("TaringItem");
                });

            modelBuilder.Entity("TaringCompare.Models.TaringItem", b =>
                {
                    b.HasOne("TaringCompare.Models.Taring", null)
                        .WithMany("TaringList")
                        .HasForeignKey("TaringID1");
                });

            modelBuilder.Entity("TaringCompare.Models.Taring", b =>
                {
                    b.Navigation("TaringList");
                });
#pragma warning restore 612, 618
        }
    }
}
